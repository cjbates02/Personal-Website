name: Deploy to EC2 (ARM)

on:
  push:
    branches:
      - master  # Trigger workflow on pushes to the `main` branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3. Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 4. Build and Push Frontend Image for ARM
    - name: Build and Push Frontend Image
      run: |
        config --global url."git@github.com:".insteadOf git://github.com/ && docker buildx build \
          --platform linux/arm64 \
          -t ${{ secrets.DOCKER_USERNAME }}/personal_website_frontend:latest \
          ./frontend \
          --push

    # 5. Build and Push Backend Image for ARM
    - name: Build and Push Backend Image
      run: |
        docker buildx build \
          --platform linux/arm64 \
          -t ${{ secrets.DOCKER_USERNAME }}/personal_website_backend:latest \
          ./backend \
          --push
          
    # 5. SSH into EC2 and Restart Docker Compose
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          cd ~
          export FROM_EMAIL=${{ secrets.FROM_EMAIL }}
          export FROM_EMAIL_PASSWORD=${{ secrets.FROM_EMAIL_PASSWORD }}
          export SMTP_HOST=${{ secrets.SMTP_HOST }}
          export SMTP_PORT=${{ secrets.SMTP_PORT }}
          export TO_EMAIL=${{ secrets.TO_EMAIL }}
          export TO_EMAIL_BACKUP=${{ secrets.TO_EMAIL_BACKUP }}
          sudo docker compose pull
          sudo docker compose down
          sudo docker compose up -d
