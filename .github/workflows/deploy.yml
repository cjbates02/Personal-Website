name: Deploy to EC2 instance

on:
  push:
    branches:
      - master

# ARM based runner so the images are built correctly for the EC2 instance
jobs:
  build-and-deploy: 
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/actions/runner-images/ubuntu-arm64:latest

    steps:
    # 1. Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 3. Build and Push Frontend Image
    - name: Build and Push Frontend Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/personal_website_frontend:latest ./frontend
        docker push ${{ secrets.DOCKER_USERNAME }}/personal_website_frontend:latest

    # 4. Build and Push Backend Image
    - name: Build and Push Backend Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/personal_website_backend:latest ./backend
        docker push ${{ secrets.DOCKER_USERNAME }}/personal_website_backend:latest

    # 5. SSH into EC2 and Restart Docker Compose
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          cd ~
          export FROM_EMAIL=${{ secrets.FROM_EMAIL }}
          export FROM_EMAIL_PASSWORD=${{ secrets.FROM_EMAIL_PASSWORD }}
          export SMTP_HOST=${{ secrets.SMTP_HOST }}
          export SMTP_PORT=${{ secrets.SMTP_PORT }}
          export TO_EMAIL=${{ secrets.TO_EMAIL }}
          export TO_EMAIL_BACKUP=${{ secrets.TO_EMAIL_BACKUP }}
          docker compose pull
          docker compose down
          docker compose up -d
